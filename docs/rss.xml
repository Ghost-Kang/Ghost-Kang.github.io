<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://Ghost-Kang.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://Ghost-Kang.github.io</link></image><lastBuildDate>Mon, 08 Apr 2024 11:44:15 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title> 底层传输加密协议：Xray   sing-box naiveproxy</title><link>https://Ghost-Kang.github.io/post/%20-di-ceng-chuan-shu-jia-mi-xie-yi-%EF%BC%9AXray%20%20%20sing-box%20naiveproxy.html</link><description>核心：&#13;
Xray-core &#13;
sing-box: 基于sagernet开发的通用代理平台&#13;
&#13;
协议组合： &#13;
vless（reality，Vision，TCP，WS，gRPC）&#13;
VMess（ TCP, WS） websocket&#13;
Trojan（TCP, gRPC）&#13;
Hysteria（sing-box）：基于 QUIC 的 TCP 和 UDP 代理，专为速度、安全性和抗审查性而设计；基于QUIC协议，卖点是Brutal，一种拥塞控制算法，可以通过用户手动制定所需速率来抵抗丢包&#13;
Tuic（sing-box）: 最近流行的一个基于QUIC的国产简单协议，卖点是BBR拥塞控制算法&#13;
NaiveProxy（sing-box）：[Browser → Naïve client] ⟶ Censor ⟶ [Frontend → Naïve server] ⟶ Internet；NaïveProxy 使用 Chromium 的网络堆栈来模拟常规 Chrome 浏览器和标准前端服务器之间的流量；&#13;
&#13;
客户端：&#13;
window: v2rayN&#13;
android: NekoBox for Android , v2ryaNG&#13;
linux: NekoRay/NeroBox for PC&#13;
IOS： showrocket/ Yet Another Shadow Socket&#13;
MAC：Clash/Yet Another Shadow Socket/v2rayU&#13;
&#13;
;mac/windows:Furious ; Android: NekoBoxForAndroid ; IOS:Streisand &#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://Ghost-Kang.github.io/post/%20-di-ceng-chuan-shu-jia-mi-xie-yi-%EF%BC%9AXray%20%20%20sing-box%20naiveproxy.html</guid><pubDate>Mon, 08 Apr 2024 11:43:46 +0000</pubDate></item><item><title>系统代理：直连模式，PAC模式，全局代理</title><link>https://Ghost-Kang.github.io/post/xi-tong-dai-li-%EF%BC%9A-zhi-lian-mo-shi-%EF%BC%8CPAC-mo-shi-%EF%BC%8C-quan-ju-dai-li.html</link><description>系统代理模式：&#13;
在系统设置里面设置了一个代理服务器，让软件可以直接跳到用系统代理设置中直接连接代理服务器，而不需要单独设置&#13;
所有的软件都知道系统内有一个代理服务器可以链接，只要跟随系统代理设置就可以连接，无需额外的配置&#13;
一般只有浏览器会自动的调用系统代理进行连接，其他大部分应用不会自己启动系统代理连接，需要手动在软件内设置&#13;
&#13;
系统代理分为三种模式：直连模式，PAC模式，全局代理&#13;
&#13;
直连模式：在系统代理设置中关闭代理，使启动了系统代理的软件直接连接网络（一般是浏览器），但是 并没有关闭本地构建的代理服务器，手动配置的代理服务的软件还可以运行&#13;
&#13;
PAC模式(proxy-auto-config)代理自动配置，是网页浏览器技术，定义浏览器如何自动的选择适当的代理服务器来访问一个网页&#13;
PCA文件包含一个jiavascript函数，“FindProxyForURL（url，host）”这个函数返回一个或者多个访问规则字符串，用户根据代理规则选择访问网站是否经过代理。</description><guid isPermaLink="true">https://Ghost-Kang.github.io/post/xi-tong-dai-li-%EF%BC%9A-zhi-lian-mo-shi-%EF%BC%8CPAC-mo-shi-%EF%BC%8C-quan-ju-dai-li.html</guid><pubDate>Sun, 07 Apr 2024 02:42:45 +0000</pubDate></item></channel></rss>